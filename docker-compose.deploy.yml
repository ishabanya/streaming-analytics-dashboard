version: '3.8'

services:
  # Main application with dashboard
  streaming-app:
    build: .
    container_name: streaming-platform-app
    ports:
      - "8501:8501"
    environment:
      - PYTHONUNBUFFERED=1
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./exports:/app/exports
    restart: unless-stopped
    depends_on:
      - etl-pipeline
      - log-producer
    networks:
      - streaming-network

  # ETL Pipeline service
  etl-pipeline:
    build: .
    container_name: streaming-etl-pipeline
    command: ["python", "etl_pipeline.py"]
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - streaming-network

  # Log Producer service
  log-producer:
    build: .
    container_name: streaming-log-producer
    command: ["python", "log_producer.py", "--duration", "1440", "--rate", "5"]
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - streaming-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: streaming-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - streaming-app
    restart: unless-stopped
    networks:
      - streaming-network

networks:
  streaming-network:
    driver: bridge

volumes:
  app-data:
    driver: local 